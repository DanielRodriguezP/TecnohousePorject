// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Technohouse.Web.Model;

namespace Technohouse.Web.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Technohouse.Web.Data.Entities.ActingZone", b =>
                {
                    b.Property<int>("ZoneId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NameZone");

                    b.HasKey("ZoneId");

                    b.ToTable("ActingZones");
                });

            modelBuilder.Entity("Technohouse.Web.Data.Entities.Agency", b =>
                {
                    b.Property<int>("AgencyId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActingZonesZoneId");

                    b.Property<string>("AddressAgency")
                        .IsRequired();

                    b.Property<int>("Cellphone");

                    b.Property<string>("NameAgency")
                        .IsRequired();

                    b.HasKey("AgencyId");

                    b.HasIndex("ActingZonesZoneId");

                    b.ToTable("Agencies");
                });

            modelBuilder.Entity("Technohouse.Web.Data.Entities.Agency", b =>
                {
                    b.HasOne("Technohouse.Web.Data.Entities.ActingZone", "ActingZones")
                        .WithMany("Agencies")
                        .HasForeignKey("ActingZonesZoneId");
                });
#pragma warning restore 612, 618
        }
    }
}
